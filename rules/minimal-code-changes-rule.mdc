---
description: 强制执行最小代码变更原则，以避免引入bug或技术债务
globs: ["**/*.*"]
alwaysApply: true
---

# 最小代码变更原则

在进行任何代码修改时，应遵循以下原则：

- 只修改与当前任务相关的代码部分
- 避免修改不相关的代码
- 用最少的代码变更完成目标

## 详细说明

1. **关注任务范围**：只修改与当前任务直接相关的代码部分
2. **保持无关代码不变**：避免修改与当前任务无关的代码，即使该代码可能存在优化空间
3. **保留现有注释**：避免更改或删除现有注释，除非它们与当前修改直接相关
4. **避免非必要重构**：除非特别指示，否则避免任何形式的代码清理或重构
5. **最小化修改**：使用最少的代码变更来完成目标
6. **认识风险**：明白每一行代码变更都可能引入bug和技术债务

## 为什么重要

- **降低风险**：每次代码变更都有引入新bug的风险
- **简化审查**：小而集中的变更更容易审查和理解
- **减少冲突**：最小化变更可以减少与其他开发者的合并冲突
- **提高测试效率**：变更越小，需要测试的范围就越集中

## 实践建议

- 在开始修改之前，明确理解任务范围和目标
- 如果发现不相关的代码问题，记录下来但不立即修复
- 使用TODO注释标记发现的问题，以便后续专门处理
- 针对大型修改，考虑将其分解为多个小的、独立的变更